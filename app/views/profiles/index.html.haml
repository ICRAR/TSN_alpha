- content_for(:title_bar) do
  #intro-sml-wrap
    %h1.fontface Leaderboard
  - @user_page =  'leaderboard'
  = render 'layouts/user_nav'
- content_for(:content) do
  #content-wrap
    .well.well-white
      .row-fluid
        .span7
          -if params[:trophy_id]
            .well.media
              %a.pull-left{:href=>trophy_path(@trophy)}= image_tag @trophy.image.url, :class=>"media-object"
              .media-body
                %h4.media-heading= link_to @trophy.heading() ,  @trophy
                %p This Trophy has been won by the following people.
          -elsif params[:galaxy_id]
            .well.media
              %a.pull-left{:href=>galaxy_path(@galaxy)}= image_tag @galaxy.thumbnail_url, :class=>"media-object"
              .media-body
                %h4.media-heading= link_to @galaxy.name ,  @galaxy
                %p This galaxy has been worked on by the following people.
        .span5
          = form_tag(search_profiles_path, :method => "get", :class => "pull-right") do
            = form_get_hidden_tag(search_profiles_path)
            = text_field_tag(:search,nil,:class => "search-query", :placeholder => "Search")


      %table#leaderboard.table.table-striped
        %thead
          %tr
            %th Name
            %th Country
            %th= sortable "rank", "Rank"
            %th= sortable "credits", "Total Credit"
            %th= sortable "rac", "Average Daily Credit"
            %th Alliance
        %tbody
          - @profiles.each do |profile|
            %tr{ :class => ('selected' if (params[:rank] and profile.rank == params[:rank].to_i))}
              %td
                = link_to profile do
                  = image_tag profile.avatar_url(24)
                  = profile.name
              %td= link_to profile.country, profile
              %td= link_to (profile.rank.nil? ? '-':profile.rank), profile
              %td= link_to number_with_delimiter(profile.credits), profile
              %td= link_to (profile.rac.nil? ? '-':profile.rac), profile
              %td= profile.alliance ? link_to(profile.alliance.name,profile.alliance, :style => "text-decoration: underline") : 'Flying Solo'
      = paginate @profiles
      = page_entries_info @profiles, :entry_name => 'Profile'
      = render 'shared/per_page_selector'