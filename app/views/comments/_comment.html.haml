- if comments_hash.class == Comment
  - comment = comments_hash
  - child_hash = comment.children.hash_tree
- else
  -comment = comments_hash[0]
  -child_hash = comments_hash[1]
.well.well-white.media{id: "comment_#{comment.id}"}
  .pull-left
    = image_tag comment.profile.avatar_url(64), class: 'media-object'
  .media-body
    .comment-body.well{id: "comment_body_#{comment.id}"}
      .media-heading
        = link_to  comment.profile do
          = comment.profile.name
          - if comment.profile.user.admin?
            (Staff)
        = distance_of_time_in_words(Time.now, comment.created_at)
        ago.
      %p= markdown(comment.content)
      - if can?(:create, Comment)
        .new_comment_link
          = link_to 'Reply', new_comment_path(:parent_id => comment.id, :commentable_id => comment.commentable_id, :commentable_type => comment.commentable_type), :remote => true, :class => "btn"
          - if can?(:update, comment)
            = link_to 'Edit', edit_comment_path(comment), :remote => true, :class => "btn"
          - if can?(:destroy, comment)
            = link_to 'Delete', comment_path(comment), :confirm => 'Are you sure you want to delete this post? This will also delete any child posts.', :method => :delete, :remote => true, :class => "btn"
      - else
        You must log in to comment
    - child_hash.reverse_each do |new_comments_hash|
      = render('comments/comment', {comments_hash: new_comments_hash})
